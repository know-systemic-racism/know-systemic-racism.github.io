---
title: "Know Systemic Racism Data Projects"
--- 

All of the projects below are in active development. If you are interested in learning more about Know Systemic Racism, [see this post](https://library.stanford.edu/blogs/stanford-libraries-blog/2021/08/introducing-know-systemic-racism-ksr-project) or contact Felicia Smith at [felicias@stanford.edu](felicias@stanford.edu)


## California Law Enforcement Agencies
#### [data](https://github.com/know-systemic-racism/ca-leas-data) | [search](https://know-systemic-racism.github.io/lea-search-bar)
This is a list of California law enforcement agencies with coordinate locations of headquarters and links to policy manuals and military equipment inventories.
```{python}
import pandas as pd
df = pd.read_csv("LEA-20230424.csv")

# prompt user to enter a zip code, city, or police department name
def click_btn():
    search_term = input("Enter a zip code, city, or police department:")
    # select rows where city is == search_term
    if (('Department' or 'Attorney' or 'Police' or 'Office' or 'Sheriff') in search_term):
        rows = df.loc[df['LEA_Name'] == search_term]
    else: 
        rows = df.loc[df['City'] == search_term]
    display(rows)
    # print(rows['LEA_Name'], rows['LEA_Type'], rows['Site'], rows['QA_Policy_Manual']) 

    
# Button functionality (borrowed from GeeksForGeeks)
from tkinter import *   # import everything from tkinter module
 
root = Tk()   # create a tkinter window      
root.geometry('100x100')    # Open window having dimension 100x100
btn = Button(root, text = 'Click me !', bd = '5',    # Create a Button
                          command = click_btn)     
btn.pack(side = 'top')     # Set the position of button on the top of window. 
 
root.mainloop()
```

## Knowledge Graph 
#### [data](https://github.com/know-systemic-racism/knowledge-graph-data) | [app](https://github.com/know-systemic-racism/knowledge-graph-query-app)
The Know Systemic Racism Knowledge Graph is a project to construct a richly connected graph of events, people, organizations, and people to reveal connections between discrete collections of data and the people behind the data. 

## California Map 
#### [view map](https://know-systemic-racism.github.io/ca-map-cnty-bndry) | [code](https://github.com/know-systemic-racism/ca-map-app)
``` {python} 
from urllib.request import urlopen
import json
with urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:
    counties = json.load(response)

import pandas as pd
# ** the file below is hosted locally but I could alternatively write code that removes all the non-CA fip codes from the DF 
df = pd.read_csv("one_col_raw.githubusercontent.com_plotly_datasets_master_fips-unemp-16.csv",  
                   dtype={"fips": str})
df_scatter = pd.read_csv("LEA-20230424.csv",  
                   dtype={"fips": str})

import plotly.express as px

fig_scatter = px.scatter_mapbox(df_scatter, lat='Latitude', lon='Longitude',
                  # color="Policy_Manual_Exists", 
                  # size="car_hours",
                  labels={'LEA_Type': 'LEA Type', 'Mil_Equip_Policy_Exists' : 'Military Equipment Policy Exists', 'Policy_Manual_Exists' : 'Policy Manual Exists','QA_Policy_Manual': 'Policy Manual Link'},  # replaces left hand name with right hand name in hover
                  hover_name='LEA_Name',
                  hover_data=['City', 'County', 'Site', 'LEA_Type', 'Mil_Equip_Policy_Exists', 'Military Equipment Inventory Exists', 'Policy_Manual_Exists', 'QA_Policy_Manual', ],
                  color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=10,
                  mapbox_style="carto-positron")

fig = px.choropleth_mapbox(df, geojson=counties, locations='fips',
                           color_continuous_scale="Viridis",
                           range_color=(0, 12),
                           mapbox_style="carto-positron",
                           zoom=4.7, center = {"lat": 37.0902, "lon": -120.7129},
                           opacity=0.5,
                          )
fig.update_geos(fitbounds="locations", visible=False)
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
fig.add_trace(
    fig_scatter.data[0]
)
fig.show()
```
~~Nothing here, yet! It's coming.~~ It's here!

## Stanford Entities 
#### [data](https://github.com/know-systemic-racism/stanford-history-entities-data)
This is the start of collecting graph data from Stanford-related library projects.

## Black@Stanford 
#### [demo](https://huggingface.co/spaces/StanfordLibraries/KSR-OralHistory)| [code](https://github.com/know-systemic-racism/black-at-stanford-qa-app) | [deprecated code](https://github.com/know-systemic-racism/black-at-stanford-chat-app)
This is a prototype Question/Answer app that uses as the source a set of oral history transcripts from Black Stanford students and faculty.

## Digital Traces 
#### [data](https://github.com/know-systemic-racism/digital-traces-2023-data) | [code](https://github.com/know-systemic-racism/digital-traces-app)
This is graph data and a conversational interface to a neo4j database to query the graph. It is based on work done during the winter 2023 course Digital Traces.

## Simple Sabotage 
#### [paper](https://github.com/know-systemic-racism/simple-sabotage)
Nothing here, yet! For an article we will write during summer 2023.

## California Military Equipment Inventory 
#### [code](https://github.com/know-systemic-racism/ca-mei-app) | [urls-data](https://github.com/know-systemic-racism/ca-mei-urls-data) | [index-data](https://github.com/know-systemic-racism/ca-mei-index-data)
This is the code and data for an app in development that makes information about military equipment used by California law enforcement agencies discoverable.

